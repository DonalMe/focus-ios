// -*- mode: Swift -*-

// AUTOGENERATED BY glean_parser. DO NOT EDIT. DO NOT COMMIT.

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */



import Glean

// swiftlint:disable superfluous_disable_command
// swiftlint:disable nesting
// swiftlint:disable line_length
// swiftlint:disable identifier_name
// swiftlint:disable force_try

extension GleanMetrics {
    enum LegacyIds {
        /// The client id from legacy telemetry.
        static let clientId = UuidMetricType( // generated from legacy.ids.client_id
            category: "legacy.ids",
            name: "client_id",
            sendInPings: ["deletion-request"],
            lifetime: .user,
            disabled: false
        )

    }

    enum Shortcuts {
        /// The number of shortcuts the user has on home screen,
        /// 0, 1, 2, 3 or 4 (maximum)
        static let shortcutsOnHomeNumber = QuantityMetricType( // generated from shortcuts.shortcuts_on_home_number
            category: "shortcuts",
            name: "shortcuts_on_home_number",
            sendInPings: ["metrics"],
            lifetime: .ping,
            disabled: false
        )

        /// A counter that indicates how many times a user has opened
        /// a website from a shortcut in the home screen.
        static let shortcutOpenedCounter = CounterMetricType( // generated from shortcuts.shortcut_opened_counter
            category: "shortcuts",
            name: "shortcut_opened_counter",
            sendInPings: ["metrics"],
            lifetime: .ping,
            disabled: false
        )

        /// A counter that indicates how many times a user has added
        /// a website to shortcuts.
        static let shortcutAddedCounter = CounterMetricType( // generated from shortcuts.shortcut_added_counter
            category: "shortcuts",
            name: "shortcut_added_counter",
            sendInPings: ["metrics"],
            lifetime: .ping,
            disabled: false
        )

        private static let shortcutRemovedCounterLabel = CounterMetricType( // generated from shortcuts.shortcut_removed_counter
            category: "shortcuts",
            name: "shortcut_removed_counter",
            sendInPings: ["metrics"],
            lifetime: .ping,
            disabled: false
        )

        /// A counter that indicates how many times a user has removed
        /// a website from shortcuts.
        /// It also indicates the screen it was removed from, home or browser.
        static let shortcutRemovedCounter = try! LabeledMetricType<CounterMetricType>( // generated from shortcuts.shortcut_removed_counter
            category: "shortcuts",
            name: "shortcut_removed_counter",
            sendInPings: ["metrics"],
            lifetime: .ping,
            disabled: false,
            subMetric: shortcutRemovedCounterLabel,
            labels: ["removed_from_browser_menu", "removed_from_home_screen"]
        )

    }

}
